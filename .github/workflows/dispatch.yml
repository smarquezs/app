name: CD Staging
on:
  workflow_dispatch:
    inputs:
      pull_number:
        description: Pull Request ID
        required: true
      environment:
        description: Environment
        default: staging
        required: true
      environment_variables:
        description: Additional Environment Variables
        required: false
env:
  DOCKER_BUILDKIT: "1"
  APP_ENV: ${{ github.event.inputs.environment }}
  KUBECONFIG: ./kubeconfig.yaml
  REPOSITORY_NAME: archdaily
  NODE_VERSION: "8.11.0"
  PULL_NUMBER: ${{ github.event.inputs.pull_number }}
jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV
          echo "APP_NAME=$(echo ${{ github.repository}} | awk -F / '{print $2}')" >> $GITHUB_ENV
          echo "RAILS_ENV_LINE=$(echo ${{ github.event.inputs.environment_variables }} | sed -E 's/([a-zA-Z_=]+)/--set-string rails_env.\1/g')" >> $GITHUB_ENV
      - name: Set release name
        run: echo "RELEASE_NAME=$APP_NAME-pr-$PULL_NUMBER" >> $GITHUB_ENV
      - name: Get PR data
        uses: octokit/request-action@v2.x
        id: get_pull_request
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ env.PULL_NUMBER }}
        env:
          GITHUB_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      - name: Check Pull Request
        run:
          echo ${{ fromJson(steps.get_pull_request.outputs.data).state }}
        # if: ${{ fromJson(steps.get_pull_request.outputs.data).state }} != "open"
        # run: exit 1
      - name: Set branch name
        run: |
          echo "BRANCH_NAME=$(echo ${{ fromJson(steps.get_pull_request.outputs.data).head.ref }})" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_NAME }}
          fetch-depth: 0
      - name: Setup git config
        run: |
          git config --global user.email "<>"
          git config --global user.name "The OPS Team"
      - name: Merge base branch
        run: |
          git merge origin/${{ fromJson(steps.get_pull_request.outputs.data).base.ref }}
      - name: Print Environment Variables
        run: |
          echo $SHORT_SHA
          echo $APP_NAME
          echo $RAILS_ENV_LINE
          echo $BRANCH_NAME
          echo $RELEASE_NAME